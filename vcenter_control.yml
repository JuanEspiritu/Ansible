---
# =============================================================================
# PLAYBOOK vCENTER - Configurar Ubuntu Server via VMware API
# =============================================================================

- name: "ðŸš€ Configurar Ubuntu Server via vCenter API"
  hosts: localhost
  connection: local
  gather_facts: no
  become: no
  
  vars:
    vcenter_hostname: "168.121.48.254"
    vcenter_username: "root"
    vcenter_password: "qwe123$"
    vcenter_port: 10123
    vm_name: "Ubuntu_Server"
    
  tasks:
    - name: "ðŸ“¡ Verificar conectividad a vCenter"
      uri:
        url: "https://{{ vcenter_hostname }}:{{ vcenter_port }}/ui/"
        method: GET
        validate_certs: no
        timeout: 10
        status_code: [200, 302]
      register: vcenter_response
      become: no
      
    - name: "âœ… vCenter estÃ¡ accesible"
      debug:
        msg: "vCenter responde correctamente en puerto {{ vcenter_port }}"
      when: vcenter_response.status in [200, 302]
      
    - name: "ðŸ”§ Ejecutar comando en Ubuntu Server via vCenter API"
      vmware_vm_shell:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        port: "{{ vcenter_port }}"
        validate_certs: no
        vm_id: "{{ vm_name }}"
        vm_username: "ubuntu"
        vm_password: "ubuntu"
        vm_shell: "/bin/bash"
        vm_shell_args: "-c"
        vm_shell_cwd: "/tmp"
        vm_shell_env:
          - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
        wait_for_process: true
        timeout: 60
      register: command_result
      vars:
        ansible_python_interpreter: "{{ ansible_playbook_python }}"
      ignore_errors: yes
      
    - name: "ðŸ“‹ Resultado del comando"
      debug:
        var: command_result
      when: command_result is defined